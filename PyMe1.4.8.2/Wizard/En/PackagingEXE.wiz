name=PackagingEXE
lessonid=11
difficulty=Simple
reward=3
introduction=Master the basic EXE packaging methods.
1=Drag from the left toolbar to create a button, double-click to enter the response function, and write code print("Hello,PyMe!")。["Create_Button","BindEvent_Button_1_onCommand","WriteCode_print('Hello,PyMe!')"]
2=Select "Windows" from the platform dropdown list box in the upper right corner of the top bar, and then click the "Publish" button on the far right.["Export_WIN"]
3=In the pop-up "Packaging Settings" dialog box, first confirm the selection of packaging tools “Pyinstaller”，Confirm the name and description, and select a PNG image as the project icon.["Export_IconFile"]
4=Select "Package as file" as the packaging type, which allows the project code to be packaged as only one EXE file.["Export_SingleFile"]
5=Select "Console Window" as the packaging type, so that you can view the output and print through the console, making it convenient to view the running logs.["Export_WithConcole"]
6=Using encryption can first convert the code into C code, compile it into a dynamic library, and then package it to prevent cracking. UPX compression tool can reduce the packaging volume, set the export directory, click "fully compile", and wait for the packaging to complete.["Export_Go_Full"]
7=After packaging is completed, click "Run Program" to close the packaging dialog box. After running the form, click the button to view the input results of the console.["Export_Run"]
8=Drag and drop the "Chart" category from the left toolbar to create a "Curve" chart below the button.["Create_Curve"]
9=Click the "Publish" button on the far right again. Next, we will replace the packaging tool with "Nuitka", which is a compilation tool that can compile Python code into C code.["Export_WIN","Export_Nuitka"]
10=If Microsoft Visual Studio is installed on the computer, you can select "MSVS" on the right. Otherwise, select "MinGW64" and PyMe will automatically download the Win64 version of MinGW64 compilation tool.["Export_MSVS"|"Export_MinGW64"]
11=Select "Package as Directory" as the packaging type, which can package the project code into a folder containing executable files.["Export_Directory"]
12=Select "No Console Window" as the packaging type, remove the accompanying console window, and only keep the main form.["Export_WithOutConcole"]
13=Exclusion modules are mainly used to exclude some modules that do not require compilation, reducing compilation time. Here, fill in "pandas, cv2".["Export_NoFollow_pandas,cv2"]
14=In the "Plugin Support" section, you can see that PyMe has automatically added matplotlib and numpy to support chart components. If you need other components, select the plugin and click the plus button to add them. Finally, click "fully compile" and wait for packaging to complete.["Export_Go_Full"]
15=After packaging is completed, click "Run Program" to close the packaging dialog box.["Export_Run"]