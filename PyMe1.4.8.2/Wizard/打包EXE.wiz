name=打包EXE
lessonid=11
difficulty=简单
reward=3
introduction=掌握基本的EXE打包方法。
1=从左侧工具条拖动创建一个按钮，并双击进入响应函数，编写代码print("Hello,PyMe!")。["Create_Button","BindEvent_Button_1_onCommand","WriteCode_print('Hello,PyMe!')"]
2=在顶部栏右上角平台下拉列表框选择“windows”，然后点击最右边的“发布”按钮。["Export_WIN"]
3=在弹出的“打包设置”对话框里，首先确认选择打包工具“Pyinstaller”，确认名称和描述，选择一个PNG图片作为工程图标。["Export_IconFile"]
4=打包类型选择“打包成文件”，这样可以把工程代码只打包为一个EXE文件。["Export_SingleFile"]
5=打包类型选择“有控制台窗口”，这样可以通过控制台查看print输出打印，方便运行日志查看。["Export_WithConcole"]
6=使用加密可以将代码先经过转c代码再编译成动态库后打包以防止破解，UPX压缩工具可以减小打包体积，设置导出目录后点击“完全编译”，等待打包完成。["Export_Go_Full"]
7=打包完成后，点击“运行程序”，关闭打包对话框。在窗体运行后，点击按钮，查看控制台的输入结果。["Export_Run"]
8=从左侧工具条“图表”分类拖动创建一个“Curve”图表，放到按钮下方。["Create_Curve"]
9=再次点击最右边的“发布”按钮。下面我们更换打包工具为“Nuitka”，这是一种可以将Python代码编译成C代码的编译工具。["Export_WIN","Export_Nuitka"]
10=如果电脑安装有Microsoft Visual Studio，可在右边选择“MSVS”，否则选择“MinGW64”,PyMe会自动下载win64版MinGW64编译工具。["Export_MSVS"|"Export_MinGW64"]
11=打包类型选择“打包成目录”，这样可以把工程代码打包成一个包含可执行文件的文件夹。["Export_Directory"]
12=打包类型选择“无控制台窗口”，去掉附带的控制台窗口，只保留主窗体。["Export_WithOutConcole"]
13=排除模块主要用来排除一些不需要编译的模块，减少编译时间，这里填入“pandas,cv2”。["Export_NoFollow_pandas,cv2"]
14=在“插件支持”看到PyMe自动加入了matplotlib和numpy以对图表组件的支持，如有需要其它组件，选择插件后点击加号按钮增加，最后点击“完全编译”，等待打包完成。["Export_Go_Full"]
15=打包完成后，点击“运行程序”，关闭打包对话框。["Export_Run"]