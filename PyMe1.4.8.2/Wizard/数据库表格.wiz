name=数据库与表格
lessonid=14
difficulty=困难
reward=3
introduction=了解数据编辑器和数据表相关控件的用法。
stepindex=40
1=选中Form_1，在右边属性栏设置窗口大小为1200x800。["SetSize_Form1_1200x800"]
2=从左边工具条拖动创建一个ListView控件到Form_1上部，宽度可修改为100%,高底调整到600像素。["Create_ListView","SetW_ListView_1_1.00","SetH_ListView_1_600"]
3=用鼠标右键单击ListView，在弹出菜单里选择“编辑列信息”，然后在弹出菜单里将列数据改为“编号”,“名称”、“性别”、“职业”和“婚姻”，并调整合适宽度。["SetColumn_['编号','名称','性别','职业','婚姻']"]
4=从左边工具条拖动创建一个Label和一个Entry，放在ListView下部，修改Label文字内容为“编号”。["Create_Label","Create_Entry","SetText_编号"]
5=继续创建一个Label和一个Entry，放在“编号”旁边，修改Label文字内容为“名称”。["Create_Label|CopyCreate_Label_2","Create_Entry|CopyCreate_Entry_2","SetText_名称"]
6=继续创建一个Label和两个RadioButton，放在“名称”旁边，修改Label文字内容为“性别”，并将两个RadioButton分别改为“男”和“女”,属性栏里值分别为1和2，分组值设为1，代表同一组下的两个不同选项。["Create_Label|CopyCreate_Label_3","Create_RadioButton","SetText_男","SetText_女"]
7=继续创建一个Label和一个ComboBox，放在“性别”旁边，修改Label文字内容为“职业”，选中ComboBox_1，在右边属性栏双击“数据项”，在弹出对话框增加“程序”、“策划”、“美术”三个数据项。["Create_Label|CopyCreate_Label_4","Create_ComboBox","SetText_职业","SetValueList_ComboBox_1_['程序','策划','美术']"]
8=继续创建一个CheckButton，放在“职业”旁边，修改文字内容为“已婚”。["Create_CheckButton","SetText_已婚"]
9=在界面最下方创建三个Button，修改文字内容为“添加”、“保存”和“删除”。["Create_Button|CopyCreate_Button_1","Create_Button|CopyCreate_Button_2","Create_Button|CopyCreate_Button_3","SetText_添加","SetText_保存","SetText_删除"]
10=在下部的文件资源栏右键单击，在弹出菜单选择“新建SQLite数据库”,输入名称“MyDB”点击确定。["Create_DB_MyDB.db"]
11=双击生成的“MyDB.db”文件，在弹出的“编辑数据库”界面的左边“数据表列表”中右键单击，创建数据表“User”。["DB_CreateTable_User"]
12=在左边树项中选中表名项，右键单击，增加字符文本类型字段名“number”,“name”以及整数类型字段名"gender","profession","marriage"，完成后点击确定。["DB_AddColumn_number_string","DB_AddColumn_name_string","DB_AddColumn_gender_int","DB_AddColumn_profession_int","DB_AddColumn_marriage_int"]
13=在左边工具条“其它”分类下找到“DataBase”组件，拖动到Form_1上，在右边属性栏选择“数据类型”为“SQLITE”，双击“数据文件或内存”，选择“filename”，找到“MyDB.db”文件。["DB_SetFileName_MyDB.db"]
14=双击“添加”按钮，在函数中编写代码“编号 = Fun.GetText(uiName,'Entry_1')”。["BindEvent_Button_1_onCommand","WriteCode_编号 = Fun.GetText(uiName,'Entry_1')"]
15=换行后编写代码“名称 = Fun.GetText(uiName,'Entry_2')”。["WriteCode_名称 = Fun.GetText(uiName,'Entry_2')"]
16=换行后编写代码“性别数值 = Fun.GetCurrentValue(uiName,'RadioButton_1')”。["WriteCode_性别数值 = Fun.GetCurrentValue(uiName,'RadioButton_1')"]
17=换行后编写代码“if 性别数值 == 1:”。["WriteCode_if 性别数值 == 1:"]
18=换行后编写代码“性别文本='男'”。["WriteCode_性别文本='男'"]
19=换行后编写代码“else:”。["WriteCode_else:"]
20=换行后编写代码“性别文本='女'”。["WriteCode_性别文本='女'"]
21=换行后编写代码“职业索引 = Fun.GetCurrentIndex(uiName,'ComboBox_1')”。["WriteCode_职业索引 = Fun.GetCurrentIndex(uiName,'ComboBox_1')"]
22=换行后编写代码“职业文本 = Fun.GetText(uiName,'ComboBox_1')”。["WriteCode_职业文本 = Fun.GetText(uiName,'ComboBox_1')"]
23=换行后编写代码“婚姻数值 = Fun.GetCurrentValue(uiName,'CheckButton_1')”。["WriteCode_婚姻数值 = Fun.GetCurrentValue(uiName,'CheckButton_1')"]
24=换行后编写代码“婚姻文本 = '未婚'”。["WriteCode_婚姻文本 = '未婚'"]
25=换行后编写代码“if 婚姻数值 == 1:”。["WriteCode_if 婚姻数值 == 1:"]
26=换行后编写代码“婚姻文本 = '已婚'”。["WriteCode_婚姻文本 = '已婚'"]
27=换行后鼠标右键单击，在菜单中找到“界面函数”下的“DataBase”，选择“DataBase_1”的函数“执行SQL语句”,并填写SQL语句“insert into User(number,name,gender,profession,marriage)values(' "+编号+" ',' "+名称+" ',"+str(性别数值)+","+str(职业索引)+","+str(婚姻数值)+")"  ”。["WriteCode_Result=DataBase_1.SQLCMD('insert into User(number,name,gender,profession,marriage)values(''+编号+'',''+名称+'','+str(性别数值)+','+str(职业索引)+','+str(婚姻数值)+')')"]
28=换行后编写代码“if Result == True:”。["WriteCode_if Result == True:"]
29=换行后鼠标右键单击，在菜单中选择“界面函数”下的“ListView”，找到“ListView_1”函数“为ListView插入一行”。["FunctionMenu_Fun_AddRowText"]
30=修改代码为Fun.AddRowText(uiName,"ListView_1",rowIndex ='end',values=(编号,名称,性别文本,职业文本,婚姻文本))。["WriteCode_Fun.AddRowText(uiName,'ListView_1',rowIndex ='end',values=(编号,名称,性别文本,职业文本,婚姻文本))"]
31=换行后在右侧助手栏缩略图中选择选择“ListView_1”，选中“点击单元格”事件，并点击“绑定”按钮，进入函数,编写代码“编号 = Fun.GetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=0)”。["BindEvent_ListView_1_onCellClicked","WriteCode_编号 = Fun.GetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=0)"]
32=换行后编写代码“Fun.SetText(uiName,'Entry_1',textValue=编号)”。["WriteCode_Fun.SetText(uiName,'Entry_1',textValue=编号)"]
33=换行后编写代码“名称 = Fun.GetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=1)”。["WriteCode_名称 = Fun.GetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=1)"]
34=换行后编写代码“Fun.SetText(uiName,'Entry_2',textValue=名称)”。["WriteCode_Fun.SetText(uiName,'Entry_2',textValue=名称)"]
35=换行后编写代码“性别 = Fun.GetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=2)”。["WriteCode_性别 = Fun.GetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=2)"]
36=换行后编写代码“if 性别 == '男':”。["WriteCode_if 性别 == '男':"]
37=换行后编写代码“Fun.SetCurrentValue(uiName,'RadioButton_1',1)”。["WriteCode_Fun.SetCurrentValue(uiName,'RadioButton_1',1)"]
38=换行后编写代码“else:”。["WriteCode_else:"]
39=换行后编写代码“Fun.SetCurrentValue(uiName,'RadioButton_1',2)”。["WriteCode_Fun.SetCurrentValue(uiName,'RadioButton_1',2)"]
40=换行后依次完成职业和婚姻的获取和显示，在右侧助手栏缩略图中选择选择“保存”按钮，选中“点击事件”，并点击“绑定”按钮，进入函数右键单击。["BindEvent_Button_2_onCommand"]
41=换行后鼠标右键单击，在菜单中选择“界面函数”下的“ListView”，找到“ListView_1”函数“取得ListView选中行的行索引”。["FunctionMenu_Fun_GetSelectedRowIndex"]
42=换行后编写代码“if rowIndex >= 0:”。["WriteCode_if rowIndex >= 0:"]
43=换行后编写代码“编号 = Fun.GetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=0)”。["WriteCode_编号 = Fun.GetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=0)"]
44=换行后从“添加”按钮的响应函数中将获取各控件值的代码复制到当前位置。["CopyCode_Button_1_onCommand","PasteCode_Button_2_onCommand"]
45=换行后鼠标右键单击，在菜单中找到“界面函数”下的“DataBase”，选择“DataBase_1”的函数“执行SQL语句”,并填写SQL语句“update User set name =' "+名称+" ',gender = "+str(性别数值)+",profession = "+str(职业索引)+", marriage = "+str(婚姻数值)+" where number =' "+编号+" '"”。["WriteCode_Result=DataBase_1.SQLCMD('update User set name = ''+名称+'',gender = '+str(性别数值)+',profession = '+str(职业索引)+', marriage = '+str(婚姻数值)+' where number = ''+编号+''')"]
46=换行后编写代码“if Result == True:”。["WriteCode_if Result == True:"]
47=换行后编写代码“Fun.SetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=1,text=名称)”。["WriteCode_Fun.SetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=1,text=名称)"]
48=换行后编写代码“Fun.SetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=2,text=性别文本)”。["WriteCode_Fun.SetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=2,text=性别文本)"]
49=换行后编写代码“Fun.SetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=3,text=职业文本)”。["WriteCode_Fun.SetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=3,text=职业文本)"]
50=换行后编写代码“Fun.SetCellText(uiName,"ListView_1",rowIndex=rowIndex,columnIndex=4,text=婚姻文本)”。["WriteCode_Fun.SetCellText(uiName,'ListView_1',rowIndex=rowIndex,columnIndex=4,text=婚姻文本)"]
51=换行后编写代码“Fun.MessageBox(text='更新成功!',title='提示',type='info',parent=None)”。["WriteCode_Fun.MessageBox(text='更新成功!',title='提示',type='info',parent=None)"]
52=在右侧助手栏缩略图中选择选择“删除”按钮，选中“点击”事件，并点击“绑定”按钮，创建事件响应函数。["BindEvent_Button_3_onCommand"]
53=换行后从“保存”按钮的响应函数中将获取选中行和取得行号、编号的代码复制到当前位置。["CopyCode_Button_2_onCommand","PasteCode_Button_3_onCommand"]
54=换行后鼠标右键单击，在菜单中找到“界面函数”下的“DataBase”，选择“DataBase_1”的函数“执行SQL语句”,并填写SQL语句“delete from User where number =' "+编号+" '”。["WriteCode_Result=DataBase_1.SQLCMD('delete from User where number = ''+编号+''')"]
55=换行后编写代码“if Result == True:”。["WriteCode_if Result == True:"]
56=换行后编写代码“Fun.DeleteRow(uiName,"ListView_1",rowIndex=rowIndex)”。["WriteCode_Fun.DeleteRow(uiName,'ListView_1',rowIndex=rowIndex)"]
57=换行后编写代码“Fun.MessageBox(text='删除成功!',title='提示',type='info',parent=None)”。["WriteCode_Fun.MessageBox(text='删除成功!',title='提示',type='info',parent=None)"]
58=在右侧助手栏缩略图中选择选择“Form_1”，选中“加载完成”事件，并点击“绑定”按钮，创建事件响应函数。["BindEvent_Form_1_onLoad"]
59=换行后鼠标右键单击，在菜单中找到“界面函数”下的“DataBase”，选择“DataBase_1”的函数“SQL语句查询”,并填写SQL语句“select * from User”。["WriteCode_RecordList=DataBase_1.SQLQuery('select * from User')"]
60=换行后编写代码“for Record in RecordList:”遍历所有的数据行。["WriteCode_for Record in RecordList:"]
61=换行后编写代码“Fun.AddRowText(uiName,"ListView_1",rowIndex ='end',values=(''),tag='')”。["WriteCode_Fun.AddRowText(uiName,'ListView_1',rowIndex ='end',values=(''),tag='')"]
62=参考“添加”按钮响应函数从Record中解析出各列文本传入values,完成后点击运行,进行数据增删保存的测试。["Run"]
